nelmio_api_doc:
    documentation:
        openapi: 3.0.0
        info:
            title: My App
            description: This is an awesome app!
            version: 1.0.0
        paths:
            /api/login:
                post:
                    tags:
                        - Authentication
                    summary: "Authenticate a user and return a JWT token"
                    requestBody:
                        required: true
                        content:
                            application/json:
                                schema:
                                    type: object
                                    properties:
                                        username:
                                            type: string
                                            example: "johndoe@example.com"
                                        password:
                                            type: string
                                            format: password
                                            example: "P@ssw0rd!"
                    responses:
                        "200":
                            description: "Successful login"
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            token:
                                                type: string
                                                example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        "401":
                            description: "Invalid credentials"
        components:
            schemas:
                LoginRequest:
                    type: object
                    properties:
                        username:
                            type: string
                            example: "johndoe@example.com"
                        password:
                            type: string
                            format: password
                            example: "P@ssw0rd!"

                LoginResponse:
                    type: object
                    properties:
                        token:
                            type: string
                            example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."

                User:
                    type: object
                    properties:
                        id:
                            type: integer
                            example: 1
                        uuid:
                            type: string
                            format: uuid
                            example: "550e8400-e29b-41d4-a716-446655440000"
                        firstName:
                            type: string
                            example: "John"
                        secondName:
                            type: string
                            example: "Doe"
                        birthday:
                            type: string
                            format: date
                            example: "2000-05-14"
                        avatarPath:
                            type: string
                            nullable: true
                            example: "/uploads/avatars/johndoe.jpg"
                        email:
                            type: string
                            format: email
                            example: "johndoe@example.com"
                        address:
                            type: string
                            example: "123 Main Street, NY"
                        phoneNumber:
                            type: string
                            example: "+1234567890"
                        gender:
                            type: string
                            enum: ["male", "female", "other"]
                            example: "male"
                        roles:
                            type: array
                            items:
                                type: string
                            example: ["ROLE_USER", "ROLE_STUDENT"]

                Student:
                    type: object
                    properties:
                        id:
                            type: integer
                            example: 1
                        associatedUser:
                            $ref: "#/components/schemas/User"
                        contactParent:
                            type: string
                            nullable: true
                            example: "John's Father"
                        classroom:
                            type: integer
                            nullable: true
                            example: 3
            securitySchemes:
                Bearer:
                    type: http
                    scheme: bearer
                    bearerFormat: JWT
        security:
            - Bearer: []
    areas:
        path_patterns:
            - ^/api(?!/doc$)
